//@ requireOptions("--forceDiskCache=0")

function check(expected, state = $vm.vmTaintedState()) {
    if (expected != state)
        throw new Error("Expected " + expected + " but state was " + state);
}

function getTaintedState() {
    return $vm.vmTaintedState();
}

/*
(module 
    (func $f (import "a" "f") (result externref))
    (func $s (import "a" "s") (param (ref func)) (param i32))

    (global $res (export "res") (mut externref) (ref.null extern))

    (func $proxy (export "proxy")
        (call $f)
        (global.set $res)
    )
    (func (export "timeout")
        (ref.func $proxy)
        (i32.const 0)
        (call $s)
    )
)

*/

$vm.runTaintedString(`
async function taintedMain() {
    let bytes = new Uint8Array([
    0x00,0x61,0x73,0x6d,0x01,0x00,0x00,0x00,0x01,0x8e,0x80,0x80,0x80,0x00,0x03,0x60,0x00,0x01,0x6f,0x60,0x02,0x64,0x70,0x7f,0x00,0x60,0x00,0x00,0x02,0x8d,0x80,0x80,0x80,0x00,0x02,0x01,0x61,0x01,0x66,0x00,0x00,0x01,0x61,0x01,0x73,0x00,0x01,0x03,0x83,0x80,0x80,0x80,0x00,0x02,0x02,0x02,0x06,0x86,0x80,0x80,0x80,0x00,0x01,0x6f,0x01,0xd0,0x6f,0x0b,0x07,0x99,0x80,0x80,0x80,0x00,0x03,0x03,0x72,0x65,0x73,0x03,0x00,0x05,0x70,0x72,0x6f,0x78,0x79,0x00,0x02,0x07,0x74,0x69,0x6d,0x65,0x6f,0x75,0x74,0x00,0x03,0x0a,0x99,0x80,0x80,0x80,0x00,0x02,0x86,0x80,0x80,0x80,0x00,0x00,0x10,0x00,0x24,0x00,0x0b,0x88,0x80,0x80,0x80,0x00,0x00,0xd2,0x02,0x41,0x00,0x10,0x01,0x0b,
    ]);
    let module = new WebAssembly.Module(bytes);
    let instance = new WebAssembly.Instance(module, { 'a': { 'f': getTaintedState, 's': setTimeout } });

    for (let i = 0; i < testLoopCount; i++) {
        instance.exports.res.value = "";
        instance.exports.timeout();
        let p = new Promise((r) => setTimeout(r, 0)).then(() => {
            check("KnownTainted", instance.exports.res.value);
        });
        await p;
    }
}

taintedMain();
`)

