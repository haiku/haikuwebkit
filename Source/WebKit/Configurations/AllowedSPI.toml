# SPI used by WebKit, either for temporary use (denoted by a bug URL) or
# permanent use.
#
# More info: https://github.com/WebKit/WebKit/wiki/Using-SPI-on-Apple-platforms

# We don't expect other browsers to support our app extension model of web
# extensions and to provide their own native messaging implementation.
[web-extensions.not-web-essential]
classes = ["NSExtension"]
selectors = [
    { name = "beginExtensionRequestWithInputItems:completion:", class = "?" },
    { name = "extensionWithIdentifier:error:", class = "?" },
    { name = "setRequestCancellationBlock:", class = "?" },
    { name = "setRequestCompletionBlock:", class = "?" },
    { name = "setRequestInterruptionBlock:", class = "?" },
    { name = "_dynamicAssetNamed:generator:", class = "?" },
    { name = "_imageWithCGSVGDocument:scale:orientation:", class = "?" },
    { name = "_rasterizedImage", class = "?" },
]

# Added in rdar://112101742.
[passkeys.equivalent-api]
symbols = ["_kSecAttrAlias"]

[private-browsing."rdar://147535351"]
selectors = [
    { name = "privateBrowsingSessionId", class = "?" }, # [ASDInstallWebAttributionService privateBrowsingSessionId]
    { name = "removeInstallWebAttributionParamsFromPrivateBrowsingSessionID:completionHandler:", class = "?" }, # [ASDInstallWebAttributionService removeInstallWebAttributionParamsFromPrivateBrowsingSessionID:completionHandler:]
    { name = "setPrivateBrowsingSessionId:", class = "?" }, # [ASDInstallWebAttributionParamsConfig setPrivateBrowsingSessionId:]
]

# Despite being part of WebKit, webpushd is a system daemon that other browsers
# interact with. cf. rdar://133559977
[webpushd.not-web-essential]
selectors = [
    { name = "_registerBSActionHandler:", class = "UIApplication" },
    { name = "emptySettings", class = "UNMutableNotificationSettings" },
    { name = "hostProcess", class = "RBSProcessHandle" },
    { name = "iconForApplicationIdentifier:", class = "UNNotificationIcon" },
    { name = "initWithInfo:responder:", class = "BSAction" },
    { name = "notificationWithRequest:date:", class = "UNNotification" },
    { name = "optionsWithDictionary:", class = "FBSOpenApplicationOptions" },
    { name = "pageURL", class = "UIWebClip" },
    { name = "pathForWebClipWithIdentifier:", class = "UIWebClip" },
    { name = "responderWithHandler:", class = "BSActionResponder" },
    { name = "responseForError:", class = "BSActionResponse" },
    { name = "setAuthorizationStatus:", class = "UNNotificationSettings" },
    { name = "setObject:forSetting:", class = "BSMutableSettings" },
    { name = "trustedClientBundleIdentifiers", class = "UIWebClip" },
    { name = "webClipWithIdentifier:", class = "UIWebClip" },
    { name = "webClips", class = "UIWebClip" },
]
symbols = [
    "_FBSOpenApplicationOptionKeyActions",
    "_FBSOpenApplicationOptionKeyActivateSuspended",
    "_SBSCreateOpenApplicationService",
]
classes = [
    "BSAction",
    "BSActionResponder",
    "BSActionResponse",
    "BSMutableSettings",
    "FBSOpenApplicationOptions",
    "UISApplicationState",
    "UIWebClip",
    "UNMutableNotificationSettings",
    "UNNotificationIcon",
]
